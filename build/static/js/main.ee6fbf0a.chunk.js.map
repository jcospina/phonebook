{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/PersonList.js","components/Notification.js","services/phonebook.js","App.js","index.js"],"names":["Filter","props","value","searchTerm","onChange","onSearchChange","PersonForm","onSubmit","addNewPerson","newName","onNameChange","newNumber","onNumberChange","type","PersonList","persons","deletePerson","map","person","name","number","onClick","id","Notification","notification","className","message","baseUrl","phonebookService","getAll","axios","get","then","response","data","addPerson","post","delete","updatePerson","put","App","useState","setPersons","setNewName","setNewNumber","setSearchTerm","setNotification","displayNotification","setTimeout","useEffect","personToUpdate","currentPerson","find","updatedPerson","catch","error","personsToDisplay","filter","search","trim","toLocaleLowerCase","indexOf","event","target","preventDefault","newPerson","some","window","confirm","concat","deletedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee6fbf0a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = (props) => {\r\n  return (\r\n    <>\r\n      <label>Search: </label>\r\n      <input value={props.searchTerm} onChange={props.onSearchChange} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.addNewPerson}>\r\n      <div>\r\n        <label>Name: </label>\r\n        <input value={props.newName} onChange={props.onNameChange} />\r\n      </div>\r\n      <div>\r\n        <label>Number: </label>\r\n        <input value={props.newNumber} onChange={props.onNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\nconst PersonList = ({ persons, deletePerson }) => {\r\n  return (\r\n    <table>\r\n      <tbody>\r\n        {persons.map((person) => (\r\n          <tr key={person.name}>\r\n            <td>{person.name}</td>\r\n            <td>{person.number}</td>\r\n            <td>\r\n              <button onClick={() => deletePerson(person.id)}>Delete</button>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default PersonList;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (notification === null) {\r\n    return null;\r\n  }\r\n  return <div className={notification.type}>{notification.message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"https://pure-savannah-87436.herokuapp.com/api/persons\";\r\nconst getAll = () => {\r\n  return axios.get(baseUrl).then((response) => response.data);\r\n};\r\n\r\nconst addPerson = (person) => {\r\n  return axios.post(baseUrl, person).then((response) => response.data);\r\n};\r\n\r\nconst deletePerson = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`);\r\n};\r\n\r\nconst updatePerson = (id, person) => {\r\n  return axios\r\n    .put(`${baseUrl}/${id}`, person)\r\n    .then((response) => response.data);\r\n};\r\n\r\nconst phonebookService = {\r\n  getAll,\r\n  addPerson,\r\n  deletePerson,\r\n  updatePerson,\r\n};\r\n\r\nexport default phonebookService;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Filter from \"./components/Filter\";\r\nimport PersonForm from \"./components/PersonForm\";\r\nimport PersonList from \"./components/PersonList\";\r\nimport Notification from \"./components/Notification\";\r\nimport phonebookService from \"./services/phonebook\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [notification, setNotification] = useState(null);\r\n\r\n  const displayNotification = (notification) => {\r\n    setNotification(notification);\r\n    setTimeout(() => {\r\n      setNotification(null);\r\n    }, 5000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    phonebookService.getAll().then((persons) => setPersons(persons));\r\n  }, []);\r\n\r\n  const addNewPerson = (event) => {\r\n    event.preventDefault();\r\n    const newPerson = {\r\n      name: newName,\r\n      number: newNumber.trim(),\r\n    };\r\n    if (persons.some((person) => person.name === newName)) {\r\n      if (\r\n        window.confirm(\r\n          `${newName} is already added to the workbook. Do you want to replace the old number with a new one`\r\n        )\r\n      ) {\r\n        return updatePerson(newPerson);\r\n      }\r\n    }\r\n    return phonebookService.addPerson(newPerson).then((newPerson) => {\r\n      displayNotification({\r\n        message: `Added ${newPerson.name}`,\r\n        type: \"success\",\r\n      });\r\n      setPersons(persons.concat(newPerson));\r\n      setNewName(\"\");\r\n      setNewNumber(\"\");\r\n    });\r\n  };\r\n  const deletePerson = (id) => {\r\n    const deletedPerson = persons.find((person) => person.id === id);\r\n    if (window.confirm(\"Are you sure you want to delete?\")) {\r\n      phonebookService\r\n        .deletePerson(id)\r\n        .then(() => {\r\n          displayNotification({\r\n            message: `Deleted ${deletedPerson.name}`,\r\n            type: \"success\",\r\n          });\r\n          setPersons(persons.filter((person) => person.id !== id));\r\n        })\r\n        .catch((error) =>\r\n          displayNotification({\r\n            message: `Information on ${deletedPerson.name} has already been removed from the server`,\r\n            type: \"error\",\r\n          })\r\n        );\r\n    }\r\n  };\r\n\r\n  const updatePerson = (personToUpdate) => {\r\n    const currentPerson = persons.find(\r\n      (person) => person.name === personToUpdate.name\r\n    );\r\n    phonebookService\r\n      .updatePerson(currentPerson.id, personToUpdate)\r\n      .then((updatedPerson) => {\r\n        displayNotification({\r\n          message: `Updated ${updatedPerson.name}`,\r\n          type: \"success\",\r\n        });\r\n        return setPersons(\r\n          persons.map((person) =>\r\n            person.id !== updatedPerson.id ? person : updatedPerson\r\n          )\r\n        );\r\n      })\r\n      .catch((error) =>\r\n        displayNotification({\r\n          message: `Information on ${currentPerson.name} has already been removed from the server`,\r\n          type: \"error\",\r\n        })\r\n      );\r\n  };\r\n  const onNumberChange = (event) => setNewNumber(event.target.value);\r\n  const onNameChange = (event) => setNewName(event.target.value);\r\n  const onSearchChange = (event) => setSearchTerm(event.target.value);\r\n\r\n  const personsToDisplay = persons.filter((person) => {\r\n    const search = searchTerm.trim().toLocaleLowerCase();\r\n    return person.name.toLocaleLowerCase().indexOf(search) >= 0;\r\n  });\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <Notification notification={notification}></Notification>\r\n      <Filter searchTerm={searchTerm} onSearchChange={onSearchChange} />\r\n      <h2>Add New</h2>\r\n      <PersonForm\r\n        addNewPerson={addNewPerson}\r\n        newName={newName}\r\n        onNameChange={onNameChange}\r\n        newNumber={newNumber}\r\n        onNumberChange={onNumberChange}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <PersonList persons={personsToDisplay} deletePerson={deletePerson} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}